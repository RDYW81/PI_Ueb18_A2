#BlueJ class context
comment0.target=Lager
comment0.text=\r\n\ Lager-Klasse\ zur\ Verwaltung\ mehrerer\ Artikel,\ ihrer\ Anzahl\ und\ Preisgestaltung.\r\n\ \r\n\ @author\ Roland\ Daidone,\ Michael\ Linn\r\n\ @version\ 1.7.1\r\n
comment1.params=lager\ maxZahlArtikel
comment1.target=Lager(java.lang.String,\ int)
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ Lager\r\n\ \r\n\ @param\ lager\ Lager\ (Name\ des\ Lagers)\r\n\ @param\ maxAnzArtikel\ maximale\ Anzahl\ festzulegender\ Artikel\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\ \r\n\ Lager-Objekt\ als\ Zeichenkette\ aufbereiten;\r\n\ verwendet\ implizit\ die\ toString-Methode\ von\ Artikel\r\n\ \r\n\ @return\ \ Zeichenkette\r\n\ \r\n
comment11.params=a
comment11.target=void\ getSorted(java.util.function.BiPredicate)
comment11.text=\r\n\ Insertion-Sort-Verfahren\ zur\ Sortierung\ der\ Artikel,\ welches\ von\ nachfolgenden\ Lambda-Ausdr\u00FCcken\r\n\ bedient\ wird.\r\n
comment12.params=filterkriterium
comment12.target=java.util.ArrayList\ filter(java.util.function.Predicate)
comment12.text=\r\n\ Methode,\ welche\ das\ Lager\ nach\ bestimmten\ Filterkriterien\ filtert\r\n\ \r\n\ @param\ filterkriterium\ gibt\ Filterkriterium\ wieder\r\n
comment13.params=anweisung
comment13.target=void\ applyToArticles(java.util.function.Consumer)
comment13.text=\r\n\ Methode,\ welche\ eine\ bestimmte\ Anweisung\ auf\ die\ Artikel\ im\ Lager\ anwendet\r\n\ \r\n\ @param\ anweisung\ gibt\ Anweisung\ wieder\r\n
comment14.params=anweisung\ filterkriterium
comment14.target=java.util.ArrayList\ applytoSomeArticles(java.util.function.Consumer,\ java.util.function.Predicate)
comment14.text=\r\n\ Methode,\ welche\ das\ Lager\ nach\ bestimmten\ Filterkriterien\ mit\ einer\ zus\u00E4tzlichen\r\n\ Anweisung\ filtert\r\n\ \r\n\ @param\ filterkriterium\ gibt\ Filterkriterium\ wieder\r\n\ @param\ anweisung\ gibt\ Anweisung\ wieder\r\n
comment15.params=a\ filterkriterium
comment15.target=java.util.List\ getArticles(java.util.function.BiPredicate,\ java.util.function.Predicate)
comment16.params=
comment16.target=void\ ausgebenBestandsliste()
comment16.text=\r\n\ Lager-Objekt\ als\ Zeichenkette\ aufbereiten\r\n\ gem\u00E4\u00DF\ Vorgabe\ Kundenspezifikation\ aus\ \u00DCbung\ 9;\r\n\ \r\n\ @return\ Zeichenkette\ nach\ Vorgabe\ Kundenspezifikation\r\n
comment17.params=bedingung\ msg
comment17.target=void\ check(boolean,\ java.lang.String)
comment17.text=\r\n\ Check-Methode,\ die\ eine\ Bedingung\ auf\ wahr\ oder\ falsch\ pr\u00FCft\ und\ Fehlermeldung\ ausgibt\r\n\ \r\n\ @param\ bedingung\ gibt\ Bedingung\ zur\u00FCck\r\n
comment2.params=artikel
comment2.target=void\ artikelAnlegen(Artikel)
comment2.text=\r\n\ Anlegen\ eines\ Artikels.\ \r\n\ Pr\u00FCfung,\ ob\ Artikelnummer\ bereits\ vergeben\ ist\r\n\ Pr\u00FCfung,\ ob\ Artikeltabelle\ bereits\ voll\ ist.\r\n\ \r\n\ @param\ \ artikelnummer\ -\ \ Artikelnummer\ des\ zu\ erstellenden\ Artikels\r\n\ @param\ \ artikelbezeichnung\ -\ \ Bezeichnung\ des\ Artikels\r\n
comment3.params=artikelnummer\ bestand
comment3.target=void\ zugangsBuchung(int,\ int)
comment3.text=\ \r\n\ Artikel\ um\ Bestand\ X\ erh\u00F6hen\ \ \r\n\ \r\n\ @param\ \ artikelnummer\ -\ zu\ \u00FCbergebende\ Artikelnummer\r\n\ @param\ \ bestand\ -\ zuzubuchender\ Bestand\ (Addition)\r\n
comment4.params=artikelnummer\ bestand
comment4.target=void\ zugangsAbbuchung(int,\ int)
comment4.text=\ \r\n\ Artikel\ um\ Bestand\ X\ abziehen\r\n\ \r\n\ @param\ \ artikelnummer\ -\ zu\ \u00FCbergebende\ Artikelnummer\r\n\ @param\ \ bestand\ -\ abzubuchender\ Bestand\ (Subtraktion)\r\n
comment5.params=artikelnummer\ artikelpreis
comment5.target=void\ artikelpreisDefinieren(int,\ double)
comment5.text=\r\n\ Artikelpreis\ definieren\r\n\ \r\n\ @param\ artikelnummer\ -\ zu\ \u00FCbergebende\ Artikelnummer\r\n\ @param\ preis\ -\ Artikelpreis\ wird\ definiert\r\n
comment6.params=artikelnummer\ artikelpreis
comment6.target=void\ artikelpreisErhoehung(int,\ double)
comment6.text=\r\n\ Artikelpreis\ um\ X-Prozent\ erh\u00F6hen\r\n\ \r\n\ @param\ artikelnummer\ -\ zu\ \u00FCbergebende\ Artikelnummer\r\n\ @param\ artikelpreis\ -\ Artikelpreis\ wird\ um\ X-Prozent\ erh\u00F6ht\r\n
comment7.params=artikelnummer\ artikelpreis
comment7.target=void\ artikelpreisSenkung(int,\ double)
comment7.text=\r\n\ Artikelpreis\ um\ X-Prozent\ senken\r\n\ \r\n\ @param\ artikelnummer\ -\ zu\ \u00FCbergebende\ Artikelnummer\r\n\ @param\ artikelpreis\ -\ Artikelpreis\ wird\ um\ X-Prozent\ gesenkt\r\n
comment8.params=artikelnummer
comment8.target=void\ delArtikel(int)
comment8.text=\ \r\n\ Artikel\ aus\ der\ Datenbank\ l\u00F6schen\r\n\ \r\n\ @param\ \ artikelnummer\ -\ zu\ uebergebende\ Artikelnummer\r\n
comment9.params=artikelnummer
comment9.target=int\ findeArtikel(int)
comment9.text=\ \r\n\ Interne\ Methode\ findeArtikel\ zur\ Vereinfachung\ anderer\ Methoden\r\n\ \r\n\ @param\ \ artikelnummer\ -\ zu\ \u00FCbergebende\ Artikelnummer\r\n\ @return\ Index\ des\ gesuchten\ Artikels\ oder\ -1\r\n\ \r\n
numComments=18
